package Templates

import (
    "github.com/tobbensol/elga_3_website/internal/Models/Review"
    "github.com/tobbensol/elga_3_website/internal/Models/User"
    "fmt"
)

templ MainPage(reviews []Review.Review, logged_in bool, user *User.User){
	<html lang="en">
		<head>
    		<title>Elga Rates</title>
        		<script
					src="https://unpkg.com/htmx.org@2.0.2"
					integrity="sha384-Y7hw+L/jvKeWIRRkqWYfPcvVxHzVzn5REgzbawhxAuQGwX1XWe70vji+VSeHOThJ"
					crossorigin="anonymous"
        		></script>
        	<link rel="stylesheet" href="/static/css/output.css" />
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      	</head>

      	<body class="bg-slate-800 font-sans">
			<!-- sticky nav-bar, stays at the top -->
			@topBar(logged_in, user)

			<main class="flex h-[calc(100vh-3.5rem)]">
			<!-- sticky sidebar, stays on the left side, no scroll -->
				@sideBar()

				  <!-- main content, scrollable -->
				<section class="w-4/5 overflow-y-auto bg-slate-400 p-4">
					<div class="flex flex-col items-center space-y-2" id="review_list">
						@makeReviewList(reviews)
					</div>
				</section>
			</main>
    	</body>
    </html>
}

templ topBar(logged_in bool, user *User.User){
	<div class="sticky top-0 z-10 flex h-14 w-full items-center bg-slate-800">
		<a href="/" class="h-10 mr-auto ml-2 bg-slate-300 rounded-md flex items-center">
			Home
		</a>

		if logged_in{
		<a href={templ.SafeURL("/user/" + user.Username)} class="ml-auto mr-2 flex justify-around p-2">
			<img src={user.GetAvatar()} alt="user avatar" class="rounded-full max-h-10" />
		</a>
		}
		else{
		<a href="/auth/login" class="ml-auto mr-2 flex justify-around p-2 bg-slate-300 rounded-full">
			<img src="static/images/discord.svg" alt="discord logo" class="h-6 w-6" />
		</a>
		}
	</div>
}

templ sideBar(){
	<aside class="sticky top-10 w-1/5 bg-slate-600 p-4">
		<form hx-post="/postReview" hx-swap="none" class="flex flex-col space-y-2">
			<input type="text" name="Album_Name" class="rounded-md bg-slate-500 p-2" placeholder="Album Name" />
			<input type="text" name="Score" class="rounded-md bg-slate-500 p-2" placeholder="Score" id="score_input" />
			<div class="flex">
				<div class="w-screen">
					<p class="text-red-600" id="input_error"></p>
				</div>
				<div>
					<button type="submit" class="float-right w-24 self-end rounded-md bg-slate-300 p-2">Submit</button>
				</div>
			</div>
		</form>
	</aside>
}

templ PostReview(review Review.Review, errMessage string){
	@scoreForm(errMessage)
	if errMessage == ""{
		<div id="review_list" hx-swap-oob="beforeend">
			@reviewWindow(review)
		</div>
	}
}

templ scoreForm(errMessage string){
    <input type="text" name="Score" class="rounded-md bg-slate-500 p-2" id="score_input" hx-swap-oob="outerHTML" />
	<p class="text-red-600" id="input_error" hx-swap-oob="outerHTML">{errMessage}</p>
}

templ makeReviewList(reviews []Review.Review){
    for _, review := range reviews{
        @reviewWindow(review)
    }
}

templ reviewWindow(review Review.Review){
    <div class="flex w-full max-w-lg items-stretch space-x-3 rounded-md bg-slate-300 p-2">
        <img
            src="/static/images/preview.jpg"
            class="max-h-20 max-w-20 self-center"
            alt="get alternate description from backend"
        />
        <div class="flex w-full flex-col justify-between">
            <div class="text-2xl">{review.AlbumName}</div>
            <div class="self-end p-2">{fmt.Sprintf("%d", review.Score)}</div>
        </div>
    </div>
}